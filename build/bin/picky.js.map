{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 11af0cd11479241e9416","webpack:///./src/ts/ColourPicker.ts","webpack:///./src/ts/popup/Popup.ts","webpack:///./src/ts/utils/dom/element/Find.ts","webpack:///./src/ts/utils/string/StringUtils.ts","webpack:///./src/ts/App.ts","webpack:///./src/ts/utils/dom/style/Css.ts","webpack:///./src/ts/popup/HuePane.ts","webpack:///./src/ts/popup/TonePane.ts","webpack:///./src/ts/toggle/Toggle.ts"],"names":[],"mappings":"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","file":"picky.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Picky\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Picky\"] = factory();\n\telse\n\t\troot[\"Picky\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 11af0cd11479241e9416\n **/","/// <reference path=\"../../typings/index.d.ts\" />\n\nimport {IOptions} from 'picky';\n\nimport {Popup} from \"./popup/Popup\";\nimport {Toggle} from \"./toggle/Toggle\";\nimport App from \"./App\";\n\nexport class ColourPicker\n{\n    element: HTMLElement;\n\n    constructor(options: IOptions)\n    {\n        console.log('new picky!');\n\n        this.setup(options);\n    }\n    \n    \n    /**\n     * setup a new instance\n     */\n    setup(options: IOptions)\n    {\n        //  create class instances for our various colour picker components\n        \n        App.popup = new Popup(options);\n        App.toggle = new Toggle(options);\n        \n        //  initialise instances\n        \n        App.toggle.setup();\n        App.popup.setup();\n    }\n\n\n    /**\n     * destroy this instance\n     */\n    destroy()\n    {\n\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/ts/ColourPicker.ts\n **/","import {IOptions} from \"picky\";\nimport {Find} from \"../utils/dom/element/Find\";\nimport App from \"../App\";\nimport Css from \"../utils/dom/style/Css\";\nimport {HuePane} from \"./HuePane\";\nimport {TonePane} from \"./TonePane\";\n\nexport class Popup\n{\n    element: HTMLElement;\n    \n    constructor(private options: IOptions)\n    {\n        \n    }\n    \n    \n    /**\n     * set up the colour picker popup;\n     * this displays the colour selection to pick from\n     */\n    setup()\n    {\n        //  create the popup element\n        \n        this.element = this.getElement();\n        \n        //  create the hue and tint colour panes class instances\n        \n        App.tonePane = new TonePane(this.options);\n        App.huePane = new HuePane(this.options);\n\n        //  setup colour panes\n        \n        App.tonePane.setup();\n        App.huePane.setup();\n    }\n\n\n    /**\n     * get the element for the popup\n     */\n    getElement()\n    {\n        var element: HTMLElement;\n\n        //  if the user has provided a selector for the popup,\n        //  let's try to find the element\n        //  and use it if we find something\n        \n        element = Find.one(this.options.elements.popup);\n        \n        if (element) return element;\n        \n        //  if nothing's found then let's create a new popup element inside the toggle button\n        \n        return this.createElement();\n    }\n\n\n    /**\n     * create the popup element with the targeted toggle element\n     */\n    createElement() : HTMLElement\n    {\n        var element: HTMLElement;\n\n        //  create a new popup element\n\n        element = document.createElement('div');\n        \n        //  add class to the popup\n        \n        Css.addClass(element, 'picky-popup');\n\n        //  place our new element on the page\n\n        App.toggle.element.appendChild(element);\n        \n        return element;\n    }\n\n\n    /**\n     * toggle popup visibility\n     */\n    toggleVisibility()\n    {\n        //  toggle the 'active' class on the element\n        \n        Css.toggleClass(this.element, 'active');\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/ts/popup/Popup.ts\n **/","import {StringUtils}  from \"../../string/StringUtils\";\n\nexport class Find\n{\n    /**\n     * find an element by class or id\n     * (or identify if we've been given a jQuery object)\n     * @param selector\n     */\n    static any(selector: any) : HTMLElement | NodeList\n    {\n        //  check we've been given a valid selector\n\n        if ( ! selector) return null;\n\n        //  check if we've been given an id or a class\n\n        if (~selector.indexOf('#')) return Find.byId(selector);\n        if (~selector.indexOf('.')) return Find.byClass(selector);\n\n        return null;\n    }\n\n\n    /**\n     * find the first matching element\n     * @param selector\n     */\n    static one(selector: any) : HTMLElement\n    {\n        var result: HTMLElement | NodeList;\n\n        //  find the element(s) with the matching selector\n\n        result = Find.any(selector);\n\n        //  if no matching element is found then return null\n\n        if ( ! result) return null;\n\n        //  if the result is a single element then return it\n\n        if (result instanceof HTMLElement) return result;\n\n        //  otherwise return the first matching instance\n        \n        return <HTMLElement>(<NodeList>result).item(0);\n    }\n\n\n    /**\n     * find elements by class\n     */\n    static byClass(className: string) : NodeList\n    {\n        return document.getElementsByClassName( StringUtils.trim(className, 1));\n    }\n\n\n    /**\n     * find an element by its id\n     */\n    static byId(id: string) : HTMLElement\n    {\n        return document.getElementById( StringUtils.trim(id, 1));\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/ts/utils/dom/element/Find.ts\n **/","export class StringUtils\n{\n    constructor()\n    {\n\n    }\n\n\n    /**\n     * trim character from the start and end of a string\n     * @param start\n     * @param end\n     */\n    static trim(input: string, start?: number, end?: number) : string\n    {\n        var output: string,\n            split: string[];\n        \n        //  trim trailing spaces\n\n        output = input.trim();\n\n        //  do we want to remove any characters from the string?\n\n        if ( ! start && ! end) return output;\n\n        //  if so, split string into an array of characters\n\n        split = output.split('');\n\n        //  remove N characters from the start and end\n\n        split.splice(0, start);\n        split.splice(-1, end);\n\n        //  and return the re-joined string\n\n        return split.join('');\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/ts/utils/string/StringUtils.ts\n **/","import * as picky from 'picky';\n\nexport default class App\n{\n    static toggle: picky.Toggle;\n    static popup: picky.Popup;\n    static swatch: picky.Swatch;\n    static huePane: picky.HuePane;\n    static tonePane: picky.TonePane;\n    \n    constructor()\n    {\n        \n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/ts/App.ts\n **/","class Css\n{\n    constructor()\n    {\n\n    }\n\n\n    /**\n     * add a CSS class to an element\n     * @param element\n     * @param className\n     */\n    static addClass(element: HTMLElement, className: string)\n    {\n        //  check we have a valid element\n\n        if ( ! element) return false;\n\n        //  add class name to list\n\n        element.classList.add(className);\n    }\n\n\n    /**\n     * remove a CSS class from an element\n     * @param element\n     * @param className\n     * @returns {boolean}\n     */\n    static removeClass(element: HTMLElement, className: string)\n    {\n        //  check we have a valid element\n\n        if ( ! element) return false;\n\n        //  remove class name from list\n\n        element.classList.remove(className);\n    }\n\n\n    /**\n     * toggle the presence of a CSS class on an element\n     * @param element\n     * @param className\n     * @param toggle\n     */\n    static toggleClass(element: HTMLElement, className: string, toggle?: boolean)\n    {\n        // if (toggle !== undefined)\n        // {\n        //\n        // }\n\n        //TODO  allow manual override of toggle value\n\n        if (Css.hasClass(element, className) === false)\n        {\n            Css.addClass(element, className);\n        }\n        else\n        {\n            Css.removeClass(element, className)\n        }\n    }\n\n\n    /**\n     * check if an element already has a particular class name\n     * @param element\n     * @param className\n     * @returns {any}\n     */\n    static hasClass(element: HTMLElement, className: string) : boolean\n    {\n        //  check we have a valid element\n        \n        if ( ! element) return false;\n        \n        //  check whether the element's class list contains the provided class name\n        \n        return element.classList.contains(className);\n    }\n}\n\nexport default Css;\n\n\n/** WEBPACK FOOTER **\n ** ./src/ts/utils/dom/style/Css.ts\n **/","import {IOptions} from \"picky\";\n\nimport {Find} from \"../utils/dom/element/Find\";\nimport App from \"../App\";\nimport Css from \"../utils/dom/style/Css\";\n\nexport class HuePane\n{\n    element: HTMLElement;\n\n    constructor(private options: IOptions)\n    {\n\n    }\n\n\n    /**\n     * set up the toggle button;\n     * this is what the user will click to open/close the colour picker popup\n     */\n    setup()\n    {\n        //  get the specified element for the toggle button\n\n        this.element = this.getElement();\n    }\n\n\n    /**\n     * get the element for the toggle\n     */\n    getElement()\n    {\n        return this.createElement();\n    }\n\n\n    /**\n     * create the element for the hue pane\n     */\n    createElement() : HTMLElement\n    {\n        var element: HTMLElement;\n        \n        //  create the new element\n        \n        element = document.createElement('svg');\n        \n        //  add the relevant class\n        \n        Css.addClass(element, 'picky-hue-pane');\n        \n        //  append the new element to the popup element\n        \n        App.popup.element.appendChild(element);\n        \n        //  return the new element\n        \n        return element;\n    }\n\n\n    /**\n     * draw a rainbow gradient in the hue panel\n     */\n    drawHues()\n    {\n        \n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/ts/popup/HuePane.ts\n **/","import {IOptions} from \"picky\";\n\nimport {Find} from \"../utils/dom/element/Find\";\nimport App from \"../App\";\nimport Css from \"../utils/dom/style/Css\";\n\nexport class TonePane\n{\n    element: HTMLElement;\n\n    constructor(private options: IOptions)\n    {\n\n    }\n\n\n    /**\n     * set up the toggle button;\n     * this is what the user will click to open/close the colour picker popup\n     */\n    setup()\n    {\n        //  get the specified element for the toggle button\n\n        this.element = this.getElement();\n    }\n\n\n    /**\n     * get the element for the toggle\n     */\n    getElement()\n    {\n        return this.createElement();\n    }\n\n\n    /**\n     * create the element for the hue pane\n     */\n    createElement() : HTMLElement\n    {\n        var element: HTMLElement;\n\n        //  create the new element\n\n        element = document.createElement('svg');\n\n        //  add the relevant class\n\n        Css.addClass(element, 'picky-tone-pane');\n\n        //  append the new element to the popup element\n\n        App.popup.element.appendChild(element);\n\n        //  return the new element\n\n        return element;\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/ts/popup/TonePane.ts\n **/","import {IOptions} from \"picky\";\nimport {Find} from \"../utils/dom/element/Find\";\nimport App from \"../App\";\n\nexport class Toggle\n{\n    element: HTMLElement;\n    \n    constructor(private options: IOptions)\n    {\n\n    }\n\n\n    /**\n     * set up the toggle button;\n     * this is what the user will click to open/close the colour picker popup\n     */\n    setup()\n    {\n        //  get the specified element for the toggle button\n        \n        this.element = this.getElement();\n\n        //  add interaction listeners\n\n        this.listen();\n    }\n\n\n    /**\n     * get the element for the toggle\n     */\n    getElement()\n    {\n        return Find.one(this.options.elements.toggle);\n    }\n\n\n    /**\n     * listen for interactions and events\n     */\n    listen()\n    {\n        this.element.addEventListener('click', (event: MouseEvent) => App.popup.toggleVisibility());\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/ts/toggle/Toggle.ts\n **/"],"sourceRoot":""}