{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap d23c67d60b3ce9e5cac3","webpack:///./src/ts/ColourPicker.ts","webpack:///./src/ts/popup/Popup.ts","webpack:///./src/ts/utils/dom/element/Find.ts","webpack:///./src/ts/utils/string/StringUtils.ts","webpack:///./src/ts/App.ts","webpack:///./src/ts/utils/dom/style/Css.ts","webpack:///./src/ts/popup/hue-pane/HuePane.ts","webpack:///./src/ts/popup/svg/CreateGradientElement.ts","webpack:///./src/ts/popup/svg/SetGradientDirection.ts","webpack:///./src/ts/popup/svg/FillGradient.ts","webpack:///./src/ts/popup/svg/CreateColourRect.ts","webpack:///./src/ts/utils/UniqueId.ts","webpack:///./src/ts/popup/hue-pane/AddInteraction.ts","webpack:///./src/ts/popup/hue-pane/GetColourAtCursor.ts","webpack:///./src/ts/popup/tone-pane/TonePane.ts","webpack:///./src/ts/toggle/Toggle.ts"],"names":[],"mappings":"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","file":"picky.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Picky\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Picky\"] = factory();\n\telse\n\t\troot[\"Picky\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap d23c67d60b3ce9e5cac3\n **/","/// <reference path=\"../../typings/index.d.ts\" />\r\n\r\nimport {IOptions} from 'picky';\r\n\r\nimport {Popup} from \"./popup/Popup\";\r\nimport {Toggle} from \"./toggle/Toggle\";\r\nimport App from \"./App\";\r\n\r\nexport class ColourPicker\r\n{\r\n    element: HTMLElement;\r\n\r\n    constructor(options: IOptions)\r\n    {\r\n        console.log('new picky!');\r\n\r\n        this.setup(options);\r\n    }\r\n    \r\n    \r\n    /**\r\n     * setup a new instance\r\n     */\r\n    setup(options: IOptions)\r\n    {\r\n        //  create class instances for our various colour picker components\r\n        \r\n        App.popup = new Popup(options);\r\n        App.toggle = new Toggle(options);\r\n        \r\n        //  initialise instances\r\n        \r\n        App.toggle.setup();\r\n        App.popup.setup();\r\n    }\r\n\r\n\r\n    /**\r\n     * destroy this instance\r\n     */\r\n    destroy()\r\n    {\r\n\r\n    }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/ts/ColourPicker.ts\n **/","import {IOptions} from \"picky\";\r\nimport {Find} from \"../utils/dom/element/Find\";\r\nimport App from \"../App\";\r\nimport Css from \"../utils/dom/style/Css\";\r\nimport {HuePane} from \"./hue-pane/HuePane\";\r\nimport {TonePane} from \"./tone-pane/TonePane\";\r\n\r\nexport class Popup\r\n{\r\n    element: HTMLElement;\r\n    \r\n    constructor(private options: IOptions)\r\n    {\r\n        \r\n    }\r\n    \r\n    \r\n    /**\r\n     * set up the colour picker popup;\r\n     * this displays the colour selection to pick from\r\n     */\r\n    setup()\r\n    {\r\n        //  create the popup element\r\n        \r\n        this.element = this.getElement();\r\n        \r\n        //  create the hue and tint colour panes class instances\r\n        \r\n        App.tonePane = new TonePane(this.options);\r\n        App.huePane = new HuePane(this.options);\r\n\r\n        //  setup colour panes\r\n        \r\n        App.tonePane.setup();\r\n        App.huePane.setup();\r\n    }\r\n\r\n\r\n    /**\r\n     * get the element for the popup\r\n     */\r\n    getElement()\r\n    {\r\n        var element: HTMLElement;\r\n\r\n        //  if the user has provided a selector for the popup,\r\n        //  let's try to find the element\r\n        //  and use it if we find something\r\n        \r\n        element = Find.one(this.options.elements.popup);\r\n        \r\n        if (element) return element;\r\n        \r\n        //  if nothing's found then let's create a new popup element inside the toggle button\r\n        \r\n        return this.createElement();\r\n    }\r\n\r\n\r\n    /**\r\n     * create the popup element with the targeted toggle element\r\n     */\r\n    createElement() : HTMLElement\r\n    {\r\n        var element: HTMLElement;\r\n\r\n        //  create a new popup element\r\n\r\n        element = document.createElement('div');\r\n        \r\n        //  add class to the popup\r\n        \r\n        Css.addClass(element, 'picky-popup');\r\n\r\n        //  place our new element on the page\r\n\r\n        App.toggle.element.appendChild(element);\r\n        \r\n        return element;\r\n    }\r\n\r\n\r\n    /**\r\n     * toggle popup visibility\r\n     */\r\n    toggleVisibility()\r\n    {\r\n        //  toggle the 'active' class on the element\r\n        \r\n        Css.toggleClass(this.element, 'active');\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/ts/popup/Popup.ts\n **/","import {StringUtils}  from \"../../string/StringUtils\";\r\n\r\nexport class Find\r\n{\r\n    /**\r\n     * find an element by class or id\r\n     * (or identify if we've been given a jQuery object)\r\n     * @param selector\r\n     */\r\n    static any(selector: any) : HTMLElement | NodeList\r\n    {\r\n        //  check we've been given a valid selector\r\n\r\n        if ( ! selector) return null;\r\n\r\n        //  check if we've been given an id or a class\r\n\r\n        if (~selector.indexOf('#')) return Find.byId(selector);\r\n        if (~selector.indexOf('.')) return Find.byClass(selector);\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n    /**\r\n     * find the first matching element\r\n     * @param selector\r\n     */\r\n    static one(selector: any) : HTMLElement\r\n    {\r\n        var result: HTMLElement | NodeList;\r\n\r\n        //  find the element(s) with the matching selector\r\n\r\n        result = Find.any(selector);\r\n\r\n        //  if no matching element is found then return null\r\n\r\n        if ( ! result) return null;\r\n\r\n        //  if the result is a single element then return it\r\n\r\n        if (result instanceof HTMLElement) return result;\r\n\r\n        //  otherwise return the first matching instance\r\n        \r\n        return <HTMLElement>(<NodeList>result).item(0);\r\n    }\r\n\r\n\r\n    /**\r\n     * find elements by class\r\n     */\r\n    static byClass(className: string) : NodeList\r\n    {\r\n        return document.getElementsByClassName( StringUtils.trim(className, 1));\r\n    }\r\n\r\n\r\n    /**\r\n     * find an element by its id\r\n     */\r\n    static byId(id: string) : HTMLElement\r\n    {\r\n        return document.getElementById( StringUtils.trim(id, 1));\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/ts/utils/dom/element/Find.ts\n **/","export class StringUtils\r\n{\r\n    constructor()\r\n    {\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * trim character from the start and end of a string\r\n     * @param start\r\n     * @param end\r\n     */\r\n    static trim(input: string, start?: number, end?: number) : string\r\n    {\r\n        var output: string,\r\n            split: string[];\r\n        \r\n        //  trim trailing spaces\r\n\r\n        output = input.trim();\r\n\r\n        //  do we want to remove any characters from the string?\r\n\r\n        if ( ! start && ! end) return output;\r\n\r\n        //  if so, split string into an array of characters\r\n\r\n        split = output.split('');\r\n\r\n        //  remove N characters from the start and end\r\n\r\n        split.splice(0, start);\r\n        split.splice(-1, end);\r\n\r\n        //  and return the re-joined string\r\n\r\n        return split.join('');\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/ts/utils/string/StringUtils.ts\n **/","import * as picky from 'picky';\r\n\r\nexport default class App\r\n{\r\n    static toggle: picky.Toggle;\r\n    static popup: picky.Popup;\r\n    static swatch: picky.Swatch;\r\n    static huePane: picky.HuePane;\r\n    static tonePane: picky.TonePane;\r\n    \r\n    constructor()\r\n    {\r\n        \r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/ts/App.ts\n **/","class Css\r\n{\r\n    constructor()\r\n    {\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * add a CSS class to an element\r\n     * @param element\r\n     * @param className\r\n     */\r\n    static addClass(element: Element, className: string)\r\n    {\r\n        //  check we have a valid element\r\n\r\n        if ( ! element) return false;\r\n\r\n        //  add class name to list\r\n\r\n        element.classList.add(className);\r\n    }\r\n\r\n\r\n    /**\r\n     * remove a CSS class from an element\r\n     * @param element\r\n     * @param className\r\n     * @returns {boolean}\r\n     */\r\n    static removeClass(element: HTMLElement, className: string)\r\n    {\r\n        //  check we have a valid element\r\n\r\n        if ( ! element) return false;\r\n\r\n        //  remove class name from list\r\n\r\n        element.classList.remove(className);\r\n    }\r\n\r\n\r\n    /**\r\n     * toggle the presence of a CSS class on an element\r\n     * @param element\r\n     * @param className\r\n     * @param toggle\r\n     */\r\n    static toggleClass(element: HTMLElement, className: string, toggle?: boolean)\r\n    {\r\n        // if (toggle !== undefined)\r\n        // {\r\n        //\r\n        // }\r\n\r\n        //TODO  allow manual override of toggle value\r\n\r\n        if (Css.hasClass(element, className) === false)\r\n        {\r\n            Css.addClass(element, className);\r\n        }\r\n        else\r\n        {\r\n            Css.removeClass(element, className)\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * check if an element already has a particular class name\r\n     * @param element\r\n     * @param className\r\n     * @returns {any}\r\n     */\r\n    static hasClass(element: HTMLElement, className: string) : boolean\r\n    {\r\n        //  check we have a valid element\r\n        \r\n        if ( ! element) return false;\r\n        \r\n        //  check whether the element's class list contains the provided class name\r\n        \r\n        return element.classList.contains(className);\r\n    }\r\n}\r\n\r\nexport default Css;\n\n\n/** WEBPACK FOOTER **\n ** ./src/ts/utils/dom/style/Css.ts\n **/","import {IOptions} from \"picky\";\r\n\r\nimport {Find} from \"../../utils/dom/element/Find\";\r\nimport App from \"../../App\";\r\nimport Css from \"../../utils/dom/style/Css\";\r\nimport CreateGradientElement from \"../svg/CreateGradientElement\";\r\nimport SetGradientDirection from \"../svg/SetGradientDirection\";\r\nimport FillGradient from \"../svg/FillGradient\";\r\nimport CreateColourRect from \"../svg/CreateColourRect\";\r\nimport UniqueId from '../../utils/UniqueId';\r\nimport AddInteraction from './AddInteraction';\r\nimport {IGradientStop} from \"picky\";\r\n\r\nexport class HuePane\r\n{\r\n    element: SVGSVGElement;\r\n\r\n    constructor(private options: IOptions)\r\n    {\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * set up the toggle button;\r\n     * this is what the user will click to open/close the colour picker popup\r\n     */\r\n    setup()\r\n    {\r\n        //  get the specified element for the toggle button\r\n\r\n        this.element = this.getElement();\r\n\r\n        //  create rectangle element and fill with the gradient\r\n\r\n        CreateColourRect(this.element, this.drawGradient());\r\n        \r\n        //  add interaction listeners to the element\r\n        \r\n        AddInteraction(this.element);\r\n    }\r\n\r\n\r\n    /**\r\n     * get the element for the toggle\r\n     */\r\n    getElement()\r\n    {\r\n        return this.createElement();\r\n    }\r\n\r\n\r\n    /**\r\n     * create the element for the hue pane\r\n     */\r\n    createElement() : SVGSVGElement\r\n    {\r\n        var element: SVGSVGElement;\r\n\r\n        //  create the new element\r\n\r\n        element = <SVGSVGElement>document.createElementNS('http://www.w3.org/2000/svg', 'svg');\r\n\r\n        //  add the relevant class\r\n        \r\n        Css.addClass(element, 'picky-hue-pane');\r\n        \r\n        //  append the new element to the popup element\r\n        \r\n        App.popup.element.appendChild(element);\r\n        \r\n        //  return the new element\r\n        \r\n        return element;\r\n    }\r\n\r\n\r\n    /**\r\n     * populate the colour fill within the element\r\n     */\r\n    populateColours()\r\n    {\r\n        return this.drawGradient();\r\n\r\n        //  add gradient fill to element\r\n\r\n        //this.element.setAttribute('fill', 'url(#' + gradient_id + ')');\r\n    }\r\n\r\n\r\n    /**\r\n     * draw a rainbow gradient in the hue panel\r\n     */\r\n    drawGradient() : string\r\n    {\r\n        var id: string,\r\n            gradient: SVGGradientElement,\r\n            stops: IGradientStop[];\r\n\r\n        //  create a unique id for the gradient\r\n\r\n        id = UniqueId('picky-svg-gradient-');\r\n        \r\n        //  set the colours we're going to use in the gradient\r\n\r\n        stops = \r\n            [\r\n                {\r\n                    colour: '#ff0000',\r\n                    offset: '0%'\r\n                },\r\n                {\r\n                    colour: '#ff00ff',\r\n                    offset: '16%'\r\n                },\r\n                {\r\n                    colour: '#0000ff',\r\n                    offset: '33%'\r\n                },\r\n                {\r\n                    colour: '#00ffff',\r\n                    offset: '50%'\r\n                },\r\n                {\r\n                    colour: '#00ff00',\r\n                    offset: '67%'\r\n                },\r\n                {\r\n                    colour: '#ffff00',\r\n                    offset: '84%'\r\n                },\r\n                {\r\n                    colour: '#ff0000',\r\n                    offset: '100%'\r\n                }\r\n            ];\r\n        \r\n        //  create a gradient within the svg element\r\n\r\n        gradient = CreateGradientElement(this.element, id);\r\n\r\n        //  set the gradient direction\r\n\r\n        SetGradientDirection(gradient, ['0', '0', '0', '100%']);\r\n\r\n        //  populate the gradient with the required colours\r\n\r\n        FillGradient(gradient, stops);\r\n\r\n        //  return the gradient's id\r\n\r\n        return id;\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/ts/popup/hue-pane/HuePane.ts\n **/","/**\r\n * create and append an SVG gradient\r\n * @param svg\r\n */\r\nexport default (svg: SVGSVGElement, id: string, type: string = 'linearGradient') =>\r\n{\r\n    var svg_ns: string,\r\n        defs: SVGDefsElement,\r\n        gradient: SVGGradientElement;\r\n    \r\n    //  get SVG namespace\r\n\r\n    svg_ns = svg.namespaceURI;\r\n    \r\n    //  create and append defs element\r\n    \r\n    defs = <SVGDefsElement>(svg.querySelector('defs') || svg.insertBefore( document.createElementNS(svg_ns, 'defs'), svg.firstChild));\r\n    \r\n    //  create the gradient\r\n\r\n    gradient = <SVGGradientElement>document.createElementNS(svg_ns, type);\r\n    \r\n    //  add an id (we need this to set the gradient as the fill of an element later)\r\n    \r\n    gradient.setAttribute('id', id);\r\n\r\n    //  set direction\r\n\r\n    gradient.setAttribute('x1', '0%');\r\n    gradient.setAttribute('y1', '0%');\r\n    gradient.setAttribute('x2', '0%');\r\n    gradient.setAttribute('y2', '100%');\r\n\r\n    //  append the gradient to the SVG defs\r\n    \r\n    defs.appendChild(gradient);\r\n\r\n    //  return the gradient\r\n    \r\n    return gradient;\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/ts/popup/svg/CreateGradientElement.ts\n **/","/**\r\n * create and append an SVG gradient\r\n * @param svg\r\n */\r\nexport default (gradient: SVGGradientElement, points: string[]) =>\r\n{\r\n    //  set direction\r\n\r\n    gradient.setAttribute('x1', points[0]);\r\n    gradient.setAttribute('y1', points[1]);\r\n    gradient.setAttribute('x2', points[2]);\r\n    gradient.setAttribute('y2', points[3]);\r\n\r\n    //  return the gradient\r\n\r\n    return gradient;\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/ts/popup/svg/SetGradientDirection.ts\n **/","import {IGradientStop} from \"picky\";\r\n\r\n/**\r\n * populate a gradient with the given colour stops\r\n * @param gradient\r\n * @param stops\r\n */\r\nexport default (gradient: SVGGradientElement, stops: IGradientStop[]) =>\r\n{\r\n    var svg_ns: string,\r\n        stop: SVGStopElement;\r\n\r\n    //  get SVG namespace\r\n\r\n    svg_ns = gradient.parentElement.namespaceURI;\r\n\r\n    for (var i: number = 0; i < stops.length; i ++)\r\n    {\r\n        //  create a new stop element\r\n\r\n        stop = <SVGStopElement>document.createElementNS(svg_ns, 'stop');\r\n\r\n        //  set the stop's colour and position within the gradient\r\n\r\n        stop.setAttribute('offset', stops[i].offset);\r\n        stop.setAttribute('stop-color', stops[i].colour);\r\n\r\n        //  append the stop to the gradient\r\n\r\n        gradient.appendChild(stop);\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/ts/popup/svg/FillGradient.ts\n **/","/**\r\n * create and append an SVG gradient\r\n * @param svg\r\n */\r\nexport default (svg: SVGSVGElement, gradient_id: string) =>\r\n{\r\n    var rect: SVGRectElement;\r\n\r\n    //  create the new rect element\r\n\r\n    rect = <SVGRectElement>document.createElementNS(svg.namespaceURI, 'rect');\r\n\r\n    //  make it fill the container\r\n\r\n    rect.setAttribute('x', '0');\r\n    rect.setAttribute('y', '0');\r\n    rect.setAttribute('width', '100%');\r\n    rect.setAttribute('height', '100%');\r\n\r\n    //  fill it with the gradient\r\n\r\n    rect.setAttribute('fill', 'url(#' + gradient_id + ')');\r\n\r\n    //  add the rect to the page\r\n\r\n    svg.appendChild(rect);\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/ts/popup/svg/CreateColourRect.ts\n **/","export default (prefix: string = '') =>\r\n{\r\n    return prefix + new Date().getTime();\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/ts/utils/UniqueId.ts\n **/","import GetColourAtCursor from './GetColourAtCursor';\r\n\r\nexport default (element: SVGSVGElement) =>\r\n{\r\n    //  on click, select the colour under the cursor\r\n\r\n    element.addEventListener('click', GetColourAtCursor);\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/ts/popup/hue-pane/AddInteraction.ts\n **/","/**\r\n * get the colour under the user's cursor\r\n * @param event\r\n */\r\nexport default (event: MouseEvent) =>\r\n{\r\n    console.log('getting colour', event);\r\n\r\n    var client_rect: ClientRect,\r\n        mouse_offset: number;\r\n\r\n    //  assume y offset is the one we want for now\r\n    //TODO  add optional X offset so we could have a horizontal hue slider if needed\r\n\r\n    //  get element bounding rect\r\n\r\n    client_rect = (<HTMLElement>event.target).getBoundingClientRect();\r\n\r\n    //  calculate the offset of the mouse within the clicked element\r\n\r\n    mouse_offset = event.pageY - client_rect.top;\r\n\r\n    console.log(mouse_offset);\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/ts/popup/hue-pane/GetColourAtCursor.ts\n **/","import {IOptions} from \"picky\";\r\n\r\nimport {Find} from \"../../utils/dom/element/Find\";\r\nimport App from \"../../App\";\r\nimport Css from \"../../utils/dom/style/Css\";\r\n\r\nexport class TonePane\r\n{\r\n    element: HTMLElement;\r\n\r\n    constructor(private options: IOptions)\r\n    {\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * set up the toggle button;\r\n     * this is what the user will click to open/close the colour picker popup\r\n     */\r\n    setup()\r\n    {\r\n        //  get the specified element for the toggle button\r\n\r\n        this.element = this.getElement();\r\n    }\r\n\r\n\r\n    /**\r\n     * get the element for the toggle\r\n     */\r\n    getElement()\r\n    {\r\n        return this.createElement();\r\n    }\r\n\r\n\r\n    /**\r\n     * create the element for the hue pane\r\n     */\r\n    createElement() : HTMLElement\r\n    {\r\n        var element: HTMLElement;\r\n\r\n        //  create the new element\r\n\r\n        element = document.createElement('svg');\r\n\r\n        //  add the relevant class\r\n\r\n        Css.addClass(element, 'picky-tone-pane');\r\n\r\n        //  append the new element to the popup element\r\n\r\n        App.popup.element.appendChild(element);\r\n\r\n        //  return the new element\r\n\r\n        return element;\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/ts/popup/tone-pane/TonePane.ts\n **/","import {IOptions} from \"picky\";\r\nimport {Find} from \"../utils/dom/element/Find\";\r\nimport App from \"../App\";\r\n\r\nexport class Toggle\r\n{\r\n    element: HTMLElement;\r\n    \r\n    constructor(private options: IOptions)\r\n    {\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * set up the toggle button;\r\n     * this is what the user will click to open/close the colour picker popup\r\n     */\r\n    setup()\r\n    {\r\n        //  get the specified element for the toggle button\r\n        \r\n        this.element = this.getElement();\r\n\r\n        //  add interaction listeners\r\n\r\n        this.listen();\r\n    }\r\n\r\n\r\n    /**\r\n     * get the element for the toggle\r\n     */\r\n    getElement()\r\n    {\r\n        return Find.one(this.options.elements.toggle);\r\n    }\r\n\r\n\r\n    /**\r\n     * listen for interactions and events\r\n     */\r\n    listen()\r\n    {\r\n        this.element.addEventListener('click', (event: MouseEvent) => App.popup.toggleVisibility());\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/ts/toggle/Toggle.ts\n **/"],"sourceRoot":""}